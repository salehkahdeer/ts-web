@model Seed.TriumphSkill.ViewModels.User

@{
    ViewBag.Title = "Create New User";
}

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary()

    <div class="panel panel-default">
        <div class="panel-heading"><span class="glyphicon glyphicon-plus" aria-hidden="true" style="margin-right: 4px;"></span>User</div>
        <div class="panel-body">
            <div class="col-lg-6">
                <legend>Login Credentials</legend>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-lg-4 control-label" })

                    <div class="col-lg-8">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Username" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-lg-4 control-label" })

                    <div class="col-lg-8">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-lg-4 control-label" })

                    <div class="col-lg-8">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>
                <div class="form-group">
                    <span class="col-lg-4 control-label">Roles</span>
                    <div class="col-lg-8" style="padding-top: 2px;">
                        @{                             
    foreach (var item in Model.Roles)
    {
        Html.RenderPartial("RoleEditorRow", item);
    }
                        }
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-8 col-lg-offset-4">
                        <button type="submit" class="btn btn-primary">Create New User</button>
                        <button type="reset" class="btn btn-default">Reset Fields</button>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <legend>User Information</legend>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserInfo.Name, new { @class = "col-lg-4 control-label" })

                    <div class="col-lg-8">
                        @Html.TextBoxFor(m => m.UserInfo.Name, new { @class = "form-control", @placeholder = "Name" })
                        @Html.ValidationMessageFor(m => m.UserInfo.Name)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserInfo.Email, new { @class = "col-lg-4 control-label" })

                    <div class="col-lg-8">
                        @Html.TextBoxFor(m => m.UserInfo.Email, new { @class = "form-control", @placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.UserInfo.Email)
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {

}